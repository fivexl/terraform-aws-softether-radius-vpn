{
  "variables": {
    "aws_access_key": "",
    "aws_secret_key": "",
    "aws_profile": "",
    "name": "",
    "ami_region": ""
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "profile": "{{ user `aws_profile`}}",
      "region": "{{user `ami_region`}}",
      "source_ami_filter": {
        "filters": {
           "virtualization-type": "hvm",
           "name": "amzn2-ami-hvm-*",
           "root-device-type": "ebs",
           "architecture": "x86_64"
        },
        "owners": ["137112412989"],
        "most_recent": true
      },
      "instance_type": "t2.micro",
      "ssh_username": "ec2-user",
      "ssh_pty": "true",
      "ami_name": "{{user `name`}}-amazon-linux-2-{{isotime | clean_resource_name}}",
      "run_tags": {
        "Name": "builder for {{user `name`}}"
      },
      "run_volume_tags": {
        "Name": "builder for {{user `name`}}"
      },
      "tags": {
        "Name": "{{user `name`}}"
      }
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "/tmp/manifest.json",
      "strip_path": true
    },
    {
      "type": "manifest"
    }
  ],
  "provisioners":[
    {
      "type": "shell",
      "inline": [
        "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo rm /root/.ssh/authorized_keys",
        "rm /home/ec2-user/.ssh/authorized_keys"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "mkdir /tmp/vpn"
      ]
    },
    {
      "type": "file",
      "source": "scripts",
      "destination": "/tmp/vpn"
    },
    {
      "type": "shell",
      "inline": [
        "sudo yum -y update",
        "sudo yum -y upgrade",
        "sudo amazon-linux-extras install epel -y",
        "sudo yum clean all"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "curl -OL https://github.com/SoftEtherVPN/SoftEtherVPN_Stable/releases/download/v4.34-9745-beta/softether-vpnserver-v4.34-9745-beta-2020.04.05-linux-x64-64bit.tar.gz",
        "tar xvf softether-vpnserver-v4.34-9745-beta-2020.04.05-linux-x64-64bit.tar.gz && rm -rf softether-vpnserver-v4.34-9745-beta-2020.04.05-linux-x64-64bit.tar.gz",
        "sudo mv vpnserver /usr/local",
        "echo Use development tools to build VPN",
        "sudo yum groupinstall \"Development Tools\" -y",
        "cd /usr/local/vpnserver/",
        "make i_read_and_agree_the_license_agreement",
        "chmod 600 *",
        "chmod 700 vpncmd vpnserver",
        "sudo yum groups remove \"Development Tools\" -y",
        "echo based on  base on https://www.softether.org/4-docs/1-manual/7._Installing_SoftEther_VPN_Server/7.3_Install_on_Linux_and_Initial_Configurations#7.3.8_Registering_a_Startup_Script",
        "sudo mv /tmp/vpn/scripts/vpnserver /etc/init.d/vpnserver",
        "sudo chmod 755 /etc/init.d/vpnserver",
        "sudo /sbin/chkconfig --add vpnserver"
      ]
    },
    {
      "type": "shell",
        "inline": [
          "curl -OL https://releases.fivexl.io/golang-radius-server-ldap-with-mfa/v0.0.1/rserver_v0.0.1_linux_amd64.zip",
          "unzip rserver_v0.0.1_linux_amd64.zip",
          "rm -rf rserver_v0.0.1_linux_amd64.zip",
          "sudo mkdir /usr/local/rserver",
          "sudo mv ./rserver /usr/local/rserver/rserver",
          "sudo chmod -R 600 /usr/local/rserver/",
          "sudo chmod 700 /usr/local/rserver /usr/local/rserver/rserver",
          "sudo chown -R nobody:nobody /usr/local/rserver/",
          "sudo mv /tmp/vpn/scripts/rserver.service /lib/systemd/system/"
        ]
    },
    {
      "type": "shell",
        "inline": [
          "sudo yum install -y awslogs"
        ]
    },
    {
      "type": "shell",
        "inline": [
          "sudo mv /tmp/vpn/scripts/iptablesload /usr/bin/",
          "sudo cp /tmp/vpn/scripts/sysctl.conf /etc/sysctl.conf"
        ]
    }
  ]
}
